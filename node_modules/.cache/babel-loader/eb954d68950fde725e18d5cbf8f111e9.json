{"ast":null,"code":"import { ref, computed } from 'vue';\nexport default {\n  __name: 'App',\n\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const questions = ref([{\n      question: 'What is Vue?',\n      answer: 0,\n      options: ['A framework', 'A library', 'A type of hat'],\n      selected: null\n    }, {\n      question: 'What is Vuex used for?',\n      answer: 2,\n      options: ['Eating a delicious snack', 'Viewing things', 'State management'],\n      selected: null\n    }, {\n      question: 'What is Vue Router?',\n      answer: 1,\n      options: ['An ice cream maker', 'A routing library for Vue', 'Burger sauce'],\n      selected: null\n    }]);\n    const quizCompleted = ref(false);\n    const currentQuestion = ref(0);\n    const score = computed(() => {\n      let value = 0;\n      questions.value.map(q => {\n        if (q.selected != null && q.answer == q.selected) {\n          console.log('correct');\n          value++;\n        }\n      });\n      return value;\n    });\n    const getCurrentQuestion = computed(() => {\n      let question = questions.value[currentQuestion.value];\n      question.index = currentQuestion.value;\n      return question;\n    });\n\n    const SetAnswer = e => {\n      questions.value[currentQuestion.value].selected = e.target.value;\n      e.target.value = null;\n    };\n\n    const NextQuestion = () => {\n      if (currentQuestion.value < questions.value.length - 1) {\n        currentQuestion.value++;\n        return;\n      }\n\n      quizCompleted.value = true;\n    };\n\n    const __returned__ = {\n      questions,\n      quizCompleted,\n      currentQuestion,\n      score,\n      getCurrentQuestion,\n      SetAnswer,\n      NextQuestion,\n      ref,\n      computed\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"AACA,SAASA,GAAT,EAAcC,QAAd,QAA8B,KAA9B;;;;;;;;IACA,MAAMC,SAAS,GAAGF,GAAG,CAAC,CACpB;MACDG,QAAQ,EAAE,cADT;MAEDC,MAAM,EAAE,CAFP;MAGDC,OAAO,EAAE,CACR,aADQ,EAER,WAFQ,EAGR,eAHQ,CAHR;MAQDC,QAAQ,EAAE;IART,CADoB,EAWpB;MACDH,QAAQ,EAAE,wBADT;MAEDC,MAAM,EAAE,CAFP;MAGDC,OAAO,EAAE,CACR,0BADQ,EAER,gBAFQ,EAGR,kBAHQ,CAHR;MAQDC,QAAQ,EAAE;IART,CAXoB,EAqBpB;MACDH,QAAQ,EAAE,qBADT;MAEDC,MAAM,EAAE,CAFP;MAGDC,OAAO,EAAE,CACR,oBADQ,EAER,2BAFQ,EAGR,cAHQ,CAHR;MAQDC,QAAQ,EAAE;IART,CArBoB,CAAD,CAArB;IAgCA,MAAMC,aAAa,GAAGP,GAAG,CAAC,KAAD,CAAzB;IACA,MAAMQ,eAAe,GAAGR,GAAG,CAAC,CAAD,CAA3B;IACA,MAAMS,KAAK,GAAGR,QAAQ,CAAC,MAAM;MAC5B,IAAIS,KAAK,GAAG,CAAZ;MACAR,SAAS,CAACQ,KAAV,CAAgBC,GAAhB,CAAoBC,CAAC,IAAI;QACxB,IAAIA,CAAC,CAACN,QAAF,IAAc,IAAd,IAAsBM,CAAC,CAACR,MAAF,IAAYQ,CAAC,CAACN,QAAxC,EAAkD;UACjDO,OAAO,CAACC,GAAR,CAAY,SAAZ;UACAJ,KAAK;QACL;MACD,CALD;MAMA,OAAOA,KAAP;IACA,CATqB,CAAtB;IAUA,MAAMK,kBAAkB,GAAGd,QAAQ,CAAC,MAAM;MACzC,IAAIE,QAAQ,GAAGD,SAAS,CAACQ,KAAV,CAAgBF,eAAe,CAACE,KAAhC,CAAf;MACAP,QAAQ,CAACa,KAAT,GAAiBR,eAAe,CAACE,KAAjC;MACA,OAAOP,QAAP;IACA,CAJkC,CAAnC;;IAKA,MAAMc,SAAS,GAAIC,CAAD,IAAO;MACxBhB,SAAS,CAACQ,KAAV,CAAgBF,eAAe,CAACE,KAAhC,EAAuCJ,QAAvC,GAAkDY,CAAC,CAACC,MAAF,CAAST,KAA3D;MACAQ,CAAC,CAACC,MAAF,CAAST,KAAT,GAAiB,IAAjB;IACA,CAHD;;IAIA,MAAMU,YAAY,GAAG,MAAM;MAC1B,IAAIZ,eAAe,CAACE,KAAhB,GAAwBR,SAAS,CAACQ,KAAV,CAAgBW,MAAhB,GAAyB,CAArD,EAAwD;QACvDb,eAAe,CAACE,KAAhB;QACA;MACA;;MAEDH,aAAa,CAACG,KAAd,GAAsB,IAAtB;IACA,CAPD","names":["ref","computed","questions","question","answer","options","selected","quizCompleted","currentQuestion","score","value","map","q","console","log","getCurrentQuestion","index","SetAnswer","e","target","NextQuestion","length"],"sources":["/home/jardeleko/Documents/app-test/src/App.vue"],"sourcesContent":["<script setup>\nimport { ref, computed } from 'vue'\nconst questions = ref([\n  {\n\tquestion: 'What is Vue?',\n\tanswer: 0,\n\toptions: [\n\t\t'A framework',\n\t\t'A library',\n\t\t'A type of hat'\n\t],\n\tselected: null\n  },\n  {\n\tquestion: 'What is Vuex used for?',\n\tanswer: 2,\n\toptions: [\n\t\t'Eating a delicious snack',\n\t\t'Viewing things',\n\t\t'State management'\n\t],\n\tselected: null\n  },\n  {\n\tquestion: 'What is Vue Router?',\n\tanswer: 1,\n\toptions: [\n\t\t'An ice cream maker',\n\t\t'A routing library for Vue',\n\t\t'Burger sauce'\n\t],\n\tselected: null\n  }\n])\nconst quizCompleted = ref(false)\nconst currentQuestion = ref(0)\nconst score = computed(() => {\n\tlet value = 0\n\tquestions.value.map(q => {\n\t\tif (q.selected != null && q.answer == q.selected) {\n\t\t\tconsole.log('correct');\n\t\t\tvalue++\n\t\t}\n\t})\n\treturn value\n})\nconst getCurrentQuestion = computed(() => {\n\tlet question = questions.value[currentQuestion.value]\n\tquestion.index = currentQuestion.value\n\treturn question\n})\nconst SetAnswer = (e) => {\n\tquestions.value[currentQuestion.value].selected = e.target.value\n\te.target.value = null\n}\nconst NextQuestion = () => {\n\tif (currentQuestion.value < questions.value.length - 1) {\n\t\tcurrentQuestion.value++\n\t\treturn\n\t}\n\t\n\tquizCompleted.value = true\n}\n</script>\n\n<template>\n\t<main class=\"app\">\n\t\t<h1>The Quiz</h1>\n\t\t\n\t\t<section class=\"quiz\" v-if=\"!quizCompleted\">\n\t\t\t<div class=\"quiz-info\">\n\t\t\t\t<span class=\"question\">{{ getCurrentQuestion.question }}</span>\n\t\t\t\t<span class=\"score\">Score {{ score }}/{{ questions.length }}</span>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div class=\"options\">\n\t\t\t\t<label \n\t\t\t\t\tv-for=\"(option, index) in getCurrentQuestion.options\" \n\t\t\t\t\t:for=\"'option' + index\" \n\t\t\t\t\t:class=\"`option ${\n\t\t\t\t\t\tgetCurrentQuestion.selected == index \n\t\t\t\t\t\t\t? index == getCurrentQuestion.answer \n\t\t\t\t\t\t\t\t? 'correct' \n\t\t\t\t\t\t\t\t: 'wrong'\n\t\t\t\t\t\t\t: ''\n\t\t\t\t\t} ${\n\t\t\t\t\t\tgetCurrentQuestion.selected != null &&\n\t\t\t\t\t\tindex != getCurrentQuestion.selected\n\t\t\t\t\t\t\t? 'disabled'\n\t\t\t\t\t\t\t: ''\n\t\t\t\t\t}`\">\n\t\t\t\t\t<input \n\t\t\t\t\t\ttype=\"radio\" \n\t\t\t\t\t\t:id=\"'option' + index\" \n\t\t\t\t\t\t:name=\"getCurrentQuestion.index\" \n\t\t\t\t\t\t:value=\"index\" \n\t\t\t\t\t\tv-model=\"getCurrentQuestion.selected\" \n\t\t\t\t\t\t:disabled=\"getCurrentQuestion.selected\"\n\t\t\t\t\t\t@change=\"SetAnswer\" \n\t\t\t\t\t/>\n\t\t\t\t\t<span>{{ option }}</span>\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t\n\t\t\t<button \n\t\t\t\t@click=\"NextQuestion\" \n\t\t\t\t:disabled=\"!getCurrentQuestion.selected\">\n\t\t\t\t{{ \n\t\t\t\t\tgetCurrentQuestion.index == questions.length - 1 \n\t\t\t\t\t\t? 'Finish' \n\t\t\t\t\t\t: getCurrentQuestion.selected == null\n\t\t\t\t\t\t\t? 'Select an option'\n\t\t\t\t\t\t\t: 'Next question'\n\t\t\t\t}}\n\t\t\t</button>\n\t\t</section>\n\n\t\t<section v-else>\n\t\t\t<h2>You have finished the quiz!</h2>\n\t\t\t<p>Your score is {{ score }}/{{ questions.length }}</p>\n\t\t</section>\n\t</main>\n</template>\n\n<style>\n* {\n\tmargin: 0;\n\tpadding: 0;\n\tbox-sizing: border-box;\n\tfont-family: 'Montserrat', sans-serif;\n}\nbody {\n\tbackground-color: #271c36;\n\tcolor: #FFF;\n}\n.app {\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tpadding: 2rem;\n\theight: 100vh;\n}\nh1 {\n\tfont-size: 2rem;\n\tmargin-bottom: 2rem;\n}\n.quiz {\n\tbackground-color: #382a4b;\n\tpadding: 1rem;\n\twidth: 100%;\n\tmax-width: 640px;\n}\n.quiz-info {\n\tdisplay: flex;\n\tjustify-content: space-between;\n\tmargin-bottom: 1rem;\n}\n.quiz-info .question {\n\tcolor: #8F8F8F;\n\tfont-size: 1.25rem;\n}\n.quiz-info.score {\n\tcolor: #FFF;\n\tfont-size: 1.25rem;\n}\n.options {\n\tmargin-bottom: 1rem;\n}\n.option {\n\tpadding: 1rem;\n\tdisplay: block;\n\tbackground-color: #271c36;\n\tmargin-bottom: 0.5rem;\n\tborder-radius: 0.5rem;\n\tcursor: pointer;\n}\n.option:hover {\n\tbackground-color: #2d213f;\n}\n.option.correct {\n\tbackground-color: #2cce7d;\n}\n.option.wrong {\n\tbackground-color: #ff5a5f;\n}\n.option:last-of-type {\n\tmargin-bottom: 0;\n}\n.option.disabled {\n\topacity: 0.5;\n}\n.option input {\n\tdisplay: none;\n}\nbutton {\n\tappearance: none;\n\toutline: none;\n\tborder: none;\n\tcursor: pointer;\n\tpadding: 0.5rem 1rem;\n\tbackground-color: #2cce7d;\n\tcolor: #2d213f;\n\tfont-weight: 700;\n\ttext-transform: uppercase;\n\tfont-size: 1.2rem;\n\tborder-radius: 0.5rem;\n}\nbutton:disabled {\n\topacity: 0.5;\n}\nh2 {\n\tfont-size: 2rem;\n\tmargin-bottom: 2rem;\n\ttext-align: center;\n}\np {\n\tcolor: #8F8F8F;\n\tfont-size: 1.5rem;\n\ttext-align: center;\n}\n</style>"]},"metadata":{},"sourceType":"module"}