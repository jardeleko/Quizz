{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelRadio as _vModelRadio, withDirectives as _withDirectives, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"app\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"The Quiz\", -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = {\n  key: 0,\n  class: \"quiz\"\n};\nconst _hoisted_4 = {\n  class: \"quiz-info\"\n};\nconst _hoisted_5 = {\n  class: \"question\"\n};\nconst _hoisted_6 = {\n  class: \"score\"\n};\nconst _hoisted_7 = {\n  class: \"options\"\n};\nconst _hoisted_8 = [\"for\"];\nconst _hoisted_9 = [\"id\", \"name\", \"value\", \"disabled\"];\nconst _hoisted_10 = [\"disabled\"];\nconst _hoisted_11 = {\n  key: 1\n};\n\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"You have finished the quiz!\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"main\", _hoisted_1, [_hoisted_2, !$setup.quizCompleted ? (_openBlock(), _createElementBlock(\"section\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"span\", _hoisted_5, _toDisplayString($setup.getCurrentQuestion.question), 1\n  /* TEXT */\n  ), _createElementVNode(\"span\", _hoisted_6, \"Score \" + _toDisplayString($setup.score) + \"/\" + _toDisplayString($setup.questions.length), 1\n  /* TEXT */\n  )]), _createElementVNode(\"div\", _hoisted_7, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.getCurrentQuestion.options, (option, index) => {\n    return _openBlock(), _createElementBlock(\"label\", {\n      for: 'option' + index,\n      key: option.index,\n      class: _normalizeClass(`option ${$setup.getCurrentQuestion.selected == index ? index == $setup.getCurrentQuestion.answer ? 'correct' : 'wrong' : ''} ${$setup.getCurrentQuestion.selected != null && index != $setup.getCurrentQuestion.selected ? 'disabled' : ''}`)\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"radio\",\n      id: 'option' + index,\n      name: $setup.getCurrentQuestion.index,\n      value: index,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.getCurrentQuestion.selected = $event),\n      disabled: $setup.getCurrentQuestion.selected,\n      onChange: $setup.SetAnswer\n    }, null, 40\n    /* PROPS, HYDRATE_EVENTS */\n    , _hoisted_9), [[_vModelRadio, $setup.getCurrentQuestion.selected]]), _createElementVNode(\"span\", null, _toDisplayString(option), 1\n    /* TEXT */\n    )], 10\n    /* CLASS, PROPS */\n    , _hoisted_8);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]), _createElementVNode(\"button\", {\n    onClick: $setup.NextQuestion,\n    disabled: !$setup.getCurrentQuestion.selected\n  }, _toDisplayString($setup.getCurrentQuestion.index == $setup.questions.length - 1 ? 'Finish' : $setup.getCurrentQuestion.selected == null ? 'Select an option' : 'Next question'), 9\n  /* TEXT, PROPS */\n  , _hoisted_10)])) : (_openBlock(), _createElementBlock(\"section\", _hoisted_11, [_hoisted_12, _createElementVNode(\"p\", null, \"Your score is \" + _toDisplayString($setup.score) + \"/\" + _toDisplayString($setup.questions.length), 1\n  /* TEXT */\n  )]))]);\n}","map":{"version":3,"mappings":";;EAmEOA,KAAK,EAAC;;;gCACXC,oBAAiB,IAAjB,EAAiB,IAAjB,EAAI,UAAJ,EAAY;AAAA;AAAZ;;;;EAESD,KAAK,EAAC;;;EACTA,KAAK,EAAC;;;EACJA,KAAK,EAAC;;;EACNA,KAAK,EAAC;;;EAGRA,KAAK,EAAC;;;;;;;;;iCA4CXC,oBAAoC,IAApC,EAAoC,IAApC,EAAI,6BAAJ,EAA+B;AAAA;AAA/B;;;uBArDFC,oBAwDO,MAxDP,cAwDO,CAvDNC,UAuDM,GArDuBC,sCAA7BF,oBA+CU,SA/CV,cA+CU,CA9CTD,oBAGM,KAHN,cAGM,CAFLA,oBAA+D,MAA/D,cAA+DI,iBAArCD,0BAAmBE,QAAkB,CAA/D,EAAqD;EAAA;EAArD,CAEK,EADLL,oBAAmE,MAAnE,cAAoB,WAAMI,iBAAGD,YAAH,CAAN,GAAiB,GAAjB,GAAkBC,iBAAGD,iBAAUG,MAAb,CAAtC,EAAyD;EAAA;EAAzD,CACK,CAHN,CA8CS,EAzCTN,oBA4BM,KA5BN,cA4BM,oBA3BLC,oBA0BQM,SA1BR,EA0BQ,IA1BR,EA0BQC,YAzBmBL,0BAAmBM,OAyBtC,EAzB6C,CAA5CC,MAA4C,EAApCC,KAAoC,KAA/B;yBADtBV,oBA0BQ,OA1BR,EA0BQ;MAxBNW,GAAG,aAAaD,KAwBV;MAvBKE,GAAG,EAAEH,MAAM,CAACC,KAuBjB;MAtBNZ,KAAK,4BAAmBI,0BAAmBW,QAAnB,IAA+BH,KAA/B,GAA+CA,KAAK,IAAIR,0BAAmBY,MAA5B,sBAA/C,SAAsJZ,0BAAmBW,QAAnB,IAA2B,IAA3B,IAA6CH,KAAK,IAAIR,0BAAmBW,QAAzE,oBAAzK;IAsBC,CA1BR,mBAgBCd,oBAQE,OARF,EAQE;MAPDgB,IAAI,EAAC,OAOJ;MANAC,EAAE,aAAaN,KAMf;MALAO,IAAI,EAAEf,0BAAmBQ,KAKzB;MAJAQ,KAAK,EAAER,KAIP;iEAHQR,0BAAmBW,WAAQM,OAGnC;MAFAC,QAAQ,EAAElB,0BAAmBW,QAE7B;MADAQ,QAAM,EAAEnB;IACR,CARF;;IAAA,+BAKUA,0BAAmBW,aAI7Bd,oBAAyB,MAAzB,EAAyB,IAAzB,EAAyBI,iBAAhBM,MAAgB,CAAzB,EAAe;IAAA;IAAf,EAzBD;;IAAA;GA0BQ,CA1BR;;EAAA,CA2BK,EA5BN,CAyCS,EAXTV,oBAUS,QAVT,EAUS;IATPuB,OAAK,EAAEpB,mBASA;IARPkB,QAAQ,GAAGlB,0BAAmBW;EAQvB,CAVT,mBAIEX,0BAAmBQ,KAAnB,IAA4BR,iBAAUG,MAAV,GAAgB,CAA5C,cAA4EH,0BAAmBW,QAAnB,IAA2B,IAA3B,wCAJ9E;;EAAA,cAWS,CA/CV,oBAiDAb,oBAGU,SAHV,EAGUuB,WAHV,EAGU,CAFTC,WAES,EADTzB,oBAAuD,GAAvD,EAAuD,IAAvD,EAAG,mBAAcI,iBAAGD,YAAH,CAAd,GAAyB,GAAzB,GAA0BC,iBAAGD,iBAAUG,MAAb,CAA7B,EAAgD;EAAA;EAAhD,CACS,CAHV,EAIM,CAxDP","names":["class","_createElementVNode","_createElementBlock","_hoisted_2","$setup","_toDisplayString","question","length","_Fragment","_renderList","options","option","index","for","key","selected","answer","type","id","name","value","$event","disabled","onChange","onClick","_hoisted_11","_hoisted_12"],"sourceRoot":"","sources":["/home/jardeleko/Documents/app-test/src/App.vue"],"sourcesContent":["<script setup>\nimport { ref, computed } from 'vue'  \n  const questions = ref([\n    {\n      question: 'What is Vue?',\n      answer:0,\n      options: [\n        'App view framework/library',\n        'A library',\n        'A type of hat'\n      ],\n      selected: null\n    },\n    {\n      question: 'What is Vuex?',\n      answer:2,\n      options: [\n        'Eating a delicious snack',\n        'A ice cream maker',\n        'State management'\n      ],\n      selected: null\n    },\n    {\n      question: 'What is Vue Router?',\n      answer:1,\n      options: [\n        'Burger sauce',\n        'A routing library for Vue',\n        'A backend framework'\n      ],\n      selected: null\n    }\n  ])\n  const quizCompleted = ref(false)\n  const currentQuestion = ref(0)\n\n  const score = computed(() => {\n    let value = 0\n    questions.value.map((q) => {\n      if(q.selected != null && q.answer == q.selected){\n        console.log('correct');\n        value++\n      }\n    })\n    return value\n  })\n  const getCurrentQuestion = computed(() => {\n    let question = questions.value[currentQuestion.value]\n    question.index = currentQuestion.value\n    return question\n  })\n  const SetAnswer = (e) => {\n    questions.value[currentQuestion.value].selected = e.target.value\n    e.target.value = null\n  }\n  const NextQuestion = () => {\n    if(currentQuestion.value < questions.value.length -1){\n      currentQuestion.value++\n      return\n    }\n    quizCompleted.value = true\n  } \n  \n</script>\n\n<template>\n\t<main class=\"app\">\n\t\t<h1>The Quiz</h1>\n\t\t\n\t\t<section class=\"quiz\" v-if=\"!quizCompleted\">\n\t\t\t<div class=\"quiz-info\">\n\t\t\t\t<span class=\"question\">{{ getCurrentQuestion.question }}</span>\n\t\t\t\t<span class=\"score\">Score {{ score }}/{{ questions.length }}</span>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div class=\"options\">\n\t\t\t\t<label \n\t\t\t\t\tv-for=\"(option, index) in getCurrentQuestion.options\" \n\t\t\t\t\t:for=\"'option' + index\" \n          v-bind:key=\"option.index\"\n\t\t\t\t\t:class=\"`option ${\n\t\t\t\t\t\tgetCurrentQuestion.selected == index \n\t\t\t\t\t\t\t? index == getCurrentQuestion.answer \n\t\t\t\t\t\t\t\t? 'correct' \n\t\t\t\t\t\t\t\t: 'wrong'\n\t\t\t\t\t\t\t: ''\n\t\t\t\t\t} ${\n\t\t\t\t\t\tgetCurrentQuestion.selected != null &&\n\t\t\t\t\t\tindex != getCurrentQuestion.selected\n\t\t\t\t\t\t\t? 'disabled'\n\t\t\t\t\t\t\t: ''\n\t\t\t\t\t}`\">\n\t\t\t\t\t<input \n\t\t\t\t\t\ttype=\"radio\" \n\t\t\t\t\t\t:id=\"'option' + index\" \n\t\t\t\t\t\t:name=\"getCurrentQuestion.index\" \n\t\t\t\t\t\t:value=\"index\" \n\t\t\t\t\t\tv-model=\"getCurrentQuestion.selected\" \n\t\t\t\t\t\t:disabled=\"getCurrentQuestion.selected\"\n\t\t\t\t\t\t@change=\"SetAnswer\" \n\t\t\t\t\t/>\n\t\t\t\t\t<span>{{ option }}</span>\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t\n\t\t\t<button \n\t\t\t\t@click=\"NextQuestion\" \n\t\t\t\t:disabled=\"!getCurrentQuestion.selected\">\n\t\t\t\t{{ \n\t\t\t\t\tgetCurrentQuestion.index == questions.length - 1 \n\t\t\t\t\t\t? 'Finish' \n\t\t\t\t\t\t: getCurrentQuestion.selected == null\n\t\t\t\t\t\t\t? 'Select an option'\n\t\t\t\t\t\t\t: 'Next question'\n\t\t\t\t}}\n\t\t\t</button>\n\t\t</section>\n\n\t\t<section v-else>\n\t\t\t<h2>You have finished the quiz!</h2>\n\t\t\t<p>Your score is {{ score }}/{{ questions.length }}</p>\n\t\t</section>\n\t</main>\n</template>\n\n<style>\n* {\n\tmargin: 0;\n\tpadding: 0;\n\tbox-sizing: border-box;\n\tfont-family: 'Montserrat', sans-serif;\n  }\n  body {\n    background-color: #15055a;\n    color: #FFF;\n  }\n  .app {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 2rem;\n    height: 100vh;\n  }\n  h1 {\n    font-size: 2rem;\n    margin-bottom: 2rem;\n  }\n  .quiz {\n    background-color: #042846;\n    padding: 1rem;\n    width: 100%;\n    max-width: 640px;\n  }\n  .quiz-info {\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 1rem;\n  }\n  .quiz-info .question {\n    color: #ffffff;\n    font-size: 1.25rem;\n  }\n  .quiz-info.score {\n    color: #FFF;\n    font-size: 1.25rem;\n  }\n  .options {\n    margin-bottom: 1rem;\n  }\n  .option {\n    padding: 1rem;\n    display: block;\n    background-color: #6b32bb;\n    margin-bottom: 0.5rem;\n    border-radius: 0.5rem;\n    cursor: pointer;\n  }\n  .option:hover {\n    background-color: #2d213f;\n  }\n  .option.correct {\n    background-color: #2cce7d;\n  }\n  .option.wrong {\n    background-color: #ff5a5f;\n  }\n  .option:last-of-type {\n    margin-bottom: 0;\n  }\n  .option.disabled {\n    opacity: 0.5;\n  }\n  .option input {\n    display: none;\n  }\n  button {\n    appearance: none;\n    outline: none;\n    border: none;\n    cursor: pointer;\n    padding: 0.5rem 1rem;\n    background-color: #2cce7d;\n    color: #2d213f;\n    font-weight: 700;\n    text-transform: uppercase;\n    font-size: 1.2rem;\n    border-radius: 0.5rem;\n  }\n  button:disabled {\n    opacity: 0.5;\n  }\n  h2 {\n    font-size: 2rem;\n    margin-bottom: 2rem;\n    text-align: center;\n  }\n  p {\n    color: #8F8F8F;\n    font-size: 1.5rem;\n    text-align: center;\n  }\n</style>\n"]},"metadata":{},"sourceType":"module"}