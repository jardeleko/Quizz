{"ast":null,"code":"import { ref, computed } from 'vue';\nexport default {\n  setup() {\n    const questions = ref([{\n      question: 'What is Vue?',\n      aswer: 0,\n      options: ['App view framework/library', 'A library', 'A type of hat']\n    }, {\n      question: 'What is Vuex?',\n      aswer: 2,\n      options: ['Eating a delicious snack', 'A ice cream maker', 'State management']\n    }, {\n      question: 'What is Vue Router?',\n      aswer: 1,\n      options: ['Burger sauce', 'A routing library for Vue', 'A backend framework']\n    }]);\n    const quizCompleted = ref(false);\n    const currentQuestion = ref(0);\n    const score = computed(() => {\n      let value = 0;\n      questions.value.map(q => {\n        if (q.selected != null && q.answer == q.selected) {\n          console.log('correct');\n          value++;\n        }\n      });\n      return value;\n    });\n    const getCurrentQuestion = computed(() => {\n      let question = questions.value[currentQuestion.value];\n      question.index = currentQuestion.value;\n      return question;\n    });\n\n    const SetAnswer = e => {\n      questions.value[currentQuestion.value].selected = e.target.value;\n      e.target.value = null;\n    };\n\n    const NextQuestion = () => {\n      if (currentQuestion.value < questions.value.lenght - 1) {\n        currentQuestion.value++;\n        return;\n      }\n\n      quizCompleted.value = true;\n    };\n  }\n\n};","map":{"version":3,"mappings":"AACA,SAASA,GAAT,EAAcC,QAAd,QAA8B,KAA9B;AAEA,eAAe;EACbC,KAAK,GAAE;IACL,MAAMC,SAAQ,GAAIH,GAAG,CAAC,CACpB;MACEI,QAAQ,EAAE,cADZ;MAEEC,KAAK,EAAC,CAFR;MAGEC,OAAO,EAAE,CACP,4BADO,EAEP,WAFO,EAGP,eAHO;IAHX,CADoB,EAUpB;MACEF,QAAQ,EAAE,eADZ;MAEEC,KAAK,EAAC,CAFR;MAGEC,OAAO,EAAE,CACP,0BADO,EAEP,mBAFO,EAGP,kBAHO;IAHX,CAVoB,EAmBpB;MACEF,QAAQ,EAAE,qBADZ;MAEEC,KAAK,EAAC,CAFR;MAGEC,OAAO,EAAE,CACP,cADO,EAEP,2BAFO,EAGP,qBAHO;IAHX,CAnBoB,CAAD,CAArB;IA6BA,MAAMC,aAAY,GAAIP,GAAG,CAAC,KAAD,CAAzB;IACA,MAAMQ,eAAc,GAAIR,GAAG,CAAC,CAAD,CAA3B;IACA,MAAMS,KAAI,GAAIR,QAAQ,CAAC,MAAM;MAC3B,IAAIS,KAAI,GAAI,CAAZ;MACAP,SAAS,CAACO,KAAV,CAAgBC,GAAhB,CAAqBC,CAAD,IAAO;QACzB,IAAGA,CAAC,CAACC,QAAF,IAAc,IAAd,IAAsBD,CAAC,CAACE,MAAF,IAAYF,CAAC,CAACC,QAAvC,EAAgD;UAC9CE,OAAO,CAACC,GAAR,CAAY,SAAZ;UACAN,KAAK;QACP;MACD,CALD;MAMA,OAAOA,KAAP;IACD,CATqB,CAAtB;IAUA,MAAMO,kBAAiB,GAAIhB,QAAQ,CAAC,MAAM;MACxC,IAAIG,QAAO,GAAID,SAAS,CAACO,KAAV,CAAgBF,eAAe,CAACE,KAAhC,CAAf;MACAN,QAAQ,CAACc,KAAT,GAAiBV,eAAe,CAACE,KAAjC;MACA,OAAON,QAAP;IACD,CAJkC,CAAnC;;IAKA,MAAMe,SAAQ,GAAKC,CAAD,IAAO;MACvBjB,SAAS,CAACO,KAAV,CAAgBF,eAAe,CAACE,KAAhC,EAAuCG,QAAvC,GAAkDO,CAAC,CAACC,MAAF,CAASX,KAA3D;MACAU,CAAC,CAACC,MAAF,CAASX,KAAT,GAAiB,IAAjB;IACF,CAHA;;IAIA,MAAMY,YAAW,GAAI,MAAM;MACzB,IAAGd,eAAe,CAACE,KAAhB,GAAwBP,SAAS,CAACO,KAAV,CAAgBa,MAAhB,GAAuB,CAAlD,EAAoD;QAClDf,eAAe,CAACE,KAAhB;QACA;MACF;;MACAH,aAAa,CAACG,KAAd,GAAsB,IAAtB;IACF,CANA;EAQF;;AA5Da,CAAf","names":["ref","computed","setup","questions","question","aswer","options","quizCompleted","currentQuestion","score","value","map","q","selected","answer","console","log","getCurrentQuestion","index","SetAnswer","e","target","NextQuestion","lenght"],"sourceRoot":"","sources":["/home/jardeleko/Documents/app-test/src/App.vue"],"sourcesContent":["<script>\nimport { ref, computed } from 'vue'\n\nexport default {\n  setup(){\n    const questions = ref([\n      {\n        question: 'What is Vue?',\n        aswer:0,\n        options: [\n          'App view framework/library',\n          'A library',\n          'A type of hat'\n        ]\n      },\n      {\n        question: 'What is Vuex?',\n        aswer:2,\n        options: [\n          'Eating a delicious snack',\n          'A ice cream maker',\n          'State management'\n        ]\n      },\n      {\n        question: 'What is Vue Router?',\n        aswer:1,\n        options: [\n          'Burger sauce',\n          'A routing library for Vue',\n          'A backend framework'\n        ]\n      }\n    ])\n    const quizCompleted = ref(false)\n    const currentQuestion = ref(0)\n    const score = computed(() => {\n      let value = 0\n      questions.value.map((q) => {\n        if(q.selected != null && q.answer == q.selected){\n          console.log('correct');\n          value++\n        }\n      })\n      return value\n    })\n    const getCurrentQuestion = computed(() => {\n      let question = questions.value[currentQuestion.value]\n      question.index = currentQuestion.value\n      return question\n    })\n    const SetAnswer = (e) => {\n      questions.value[currentQuestion.value].selected = e.target.value\n      e.target.value = null\n    }\n    const NextQuestion = () => {\n      if(currentQuestion.value < questions.value.lenght-1){\n        currentQuestion.value++\n        return\n      }\n      quizCompleted.value = true\n    }\n    \n  }\n}\n</script>\n\n<template>\n  <main class=\"app\">\n    <h1>Quizz</h1> \n    <section class=\"quiz\" v-if=\"!quizCompleted\">\n      \n      <div class=\"quiz-info\">\n        <span class=\"question\">{{getCurrentQuestion.question}}</span>\n        <span class=\"score\">{{score}}</span>\n      </div>\n      <div class=\"options\">\n        <label \n          v-for=\"(option, index) in getCurrentQuestion.option\"\n          :for=\"'option' + index\"\n          :class=\"`option ${\n              getCurrentQuestion.selected == index\n              ? index == getCurrentQuestion.answer\n                ? 'correct'\n                : 'wrong'\n              : ''\n          } ${\n            getCurrentQuestion.selected != null &&\n            index != getCurrentQuestion.selected \n              ? 'disabled'\n              : ''\n          }`\"\n        >\n          <input\n            type=\"radio\"\n            :id=\"'option' + index\"\n            :name=\"getCurrentQuestion.index\"\n            :value=\"index\"\n            v-model=\"getCurrentQuestion.selected\"\n            :disabled=\"getCurrentQuestion.selected\"\n            @chage=\"setAnswer\"\n          />\n          <span>{{option}}</span>\n        </label>        \n      </div>\n      <button\n        @click=\"NextQuestion\"\n        :disabled=\"!getCurrentQuestion.selected\">\n        {{\n          getCurrentQuestion.index == questions.lenght -1 \n            ? 'Finish'\n            : getCurrentQuestion.selected == null\n               ? 'Select an option'\n               : 'Next question'\n        }}\n      >\n      </button>\n    </section> \n    <section v-else>  \n      <h2>You have finished the quiz!</h2>\n      <p>Your score is {{score}}/{{questions.lenght}}</p>\n    </section>\n  </main>\n</template>\n\n<style>\n* {\n\tmargin: 0;\n\tpadding: 0;\n\tbox-sizing: border-box;\n\tfont-family: 'Montserrat', sans-serif;\n  }\n  body {\n    background-color: #271c36;\n    color: #FFF;\n  }\n  .app {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 2rem;\n    height: 100vh;\n  }\n  h1 {\n    font-size: 2rem;\n    margin-bottom: 2rem;\n  }\n  .quiz {\n    background-color: #382a4b;\n    padding: 1rem;\n    width: 100%;\n    max-width: 640px;\n  }\n  .quiz-info {\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 1rem;\n  }\n  .quiz-info .question {\n    color: #8F8F8F;\n    font-size: 1.25rem;\n  }\n  .quiz-info.score {\n    color: #FFF;\n    font-size: 1.25rem;\n  }\n  .options {\n    margin-bottom: 1rem;\n  }\n  .option {\n    padding: 1rem;\n    display: block;\n    background-color: #271c36;\n    margin-bottom: 0.5rem;\n    border-radius: 0.5rem;\n    cursor: pointer;\n  }\n  .option:hover {\n    background-color: #2d213f;\n  }\n  .option.correct {\n    background-color: #2cce7d;\n  }\n  .option.wrong {\n    background-color: #ff5a5f;\n  }\n  .option:last-of-type {\n    margin-bottom: 0;\n  }\n  .option.disabled {\n    opacity: 0.5;\n  }\n  .option input {\n    display: none;\n  }\n  button {\n    appearance: none;\n    outline: none;\n    border: none;\n    cursor: pointer;\n    padding: 0.5rem 1rem;\n    background-color: #2cce7d;\n    color: #2d213f;\n    font-weight: 700;\n    text-transform: uppercase;\n    font-size: 1.2rem;\n    border-radius: 0.5rem;\n  }\n  button:disabled {\n    opacity: 0.5;\n  }\n  h2 {\n    font-size: 2rem;\n    margin-bottom: 2rem;\n    text-align: center;\n  }\n  p {\n    color: #8F8F8F;\n    font-size: 1.5rem;\n    text-align: center;\n  }\n</style>\n"]},"metadata":{},"sourceType":"module"}