{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelRadio as _vModelRadio, withDirectives as _withDirectives, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"app\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Quizz\", -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = {\n  key: 0,\n  class: \"quiz\"\n};\nconst _hoisted_4 = {\n  class: \"quiz-info\"\n};\nconst _hoisted_5 = {\n  class: \"question\"\n};\nconst _hoisted_6 = {\n  class: \"score\"\n};\nconst _hoisted_7 = {\n  class: \"options\"\n};\nconst _hoisted_8 = [\"for\"];\nconst _hoisted_9 = [\"id\", \"name\", \"value\", \"disabled\"];\nconst _hoisted_10 = [\"disabled\"];\nconst _hoisted_11 = {\n  key: 1\n};\n\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"You have finished the quiz!\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"main\", _hoisted_1, [_hoisted_2, !_ctx.quizCompleted ? (_openBlock(), _createElementBlock(\"section\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"span\", _hoisted_5, _toDisplayString(_ctx.getCurrentQuestion.question), 1\n  /* TEXT */\n  ), _createElementVNode(\"span\", _hoisted_6, _toDisplayString(_ctx.score), 1\n  /* TEXT */\n  )]), _createElementVNode(\"div\", _hoisted_7, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.getCurrentQuestion.option, (option, index) => {\n    return _openBlock(), _createElementBlock(\"label\", {\n      for: 'option' + index,\n      class: _normalizeClass(`option ${_ctx.getCurrentQuestion.selected == index ? index == _ctx.getCurrentQuestion.answer ? 'correct' : 'wrong' : ''} ${_ctx.getCurrentQuestion.selected != null && index != _ctx.getCurrentQuestion.selected ? 'disabled' : ''}`)\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"radio\",\n      id: 'option' + index,\n      name: _ctx.getCurrentQuestion.index,\n      value: index,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.getCurrentQuestion.selected = $event),\n      disabled: _ctx.getCurrentQuestion.selected,\n      onChage: _cache[1] || (_cache[1] = (...args) => _ctx.setAnswer && _ctx.setAnswer(...args))\n    }, null, 40\n    /* PROPS, HYDRATE_EVENTS */\n    , _hoisted_9), [[_vModelRadio, _ctx.getCurrentQuestion.selected]]), _createElementVNode(\"span\", null, _toDisplayString(option), 1\n    /* TEXT */\n    )], 10\n    /* CLASS, PROPS */\n    , _hoisted_8);\n  }), 256\n  /* UNKEYED_FRAGMENT */\n  ))]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => _ctx.NextQuestion && _ctx.NextQuestion(...args)),\n    disabled: !_ctx.getCurrentQuestion.selected\n  }, _toDisplayString(_ctx.getCurrentQuestion.index == _ctx.questions.lenght - 1 ? 'Finish' : _ctx.getCurrentQuestion.selected == null ? 'Select an option' : 'Next question') + \" > \", 9\n  /* TEXT, PROPS */\n  , _hoisted_10)])) : (_openBlock(), _createElementBlock(\"section\", _hoisted_11, [_hoisted_12, _createElementVNode(\"p\", null, \"Your score is \" + _toDisplayString(_ctx.score) + \"/\" + _toDisplayString(_ctx.questions.lenght), 1\n  /* TEXT */\n  )]))]);\n}","map":{"version":3,"mappings":";;EAoEQA,KAAK,EAAC;;;gCACVC,oBAAc,IAAd,EAAc,IAAd,EAAI,OAAJ,EAAS;AAAA;AAAT;;;;EACSD,KAAK,EAAC;;;EAERA,KAAK,EAAC;;;EACHA,KAAK,EAAC;;;EACNA,KAAK,EAAC;;;EAETA,KAAK,EAAC;;;;;;;;;iCA2CXC,oBAAoC,IAApC,EAAoC,IAApC,EAAI,6BAAJ,EAA+B;AAAA;AAA/B;;;uBAnDJC,oBAsDO,MAtDP,cAsDO,CArDLC,UAqDK,GApDwBC,oCAA7BF,oBA+CU,SA/CV,cA+CU,CA7CRD,oBAGM,KAHN,cAGM,CAFJA,oBAA6D,MAA7D,cAA6DI,iBAApCD,wBAAmBE,QAAiB,CAA7D,EAAoD;EAAA;EAApD,CAEI,EADJL,oBAAoC,MAApC,cAAoCI,iBAAdD,UAAc,CAApC,EAA2B;EAAA;EAA3B,CACI,CAHN,CA6CQ,EAzCRH,oBA4BM,KA5BN,cA4BM,oBA3BJC,oBA0BQK,SA1BR,EA0BQ,IA1BR,EA0BQC,YAzBoBJ,wBAAmBK,MAyBvC,EAzB6C,CAA3CA,MAA2C,EAAnCC,KAAmC,KAA9B;yBADvBR,oBA0BQ,OA1BR,EA0BQ;MAxBLS,GAAG,aAAaD,KAwBX;MAvBLV,KAAK,4BAA2BI,wBAAmBQ,QAAnB,IAA+BF,KAA/B,GAAqDA,KAAK,IAAIN,wBAAmBS,MAA5B,sBAArD,SAA4LT,wBAAmBQ,QAAnB,IAA2B,IAA3B,IAAmDF,KAAK,IAAIN,wBAAmBQ,QAA/E,oBAAvN;IAuBA,CA1BR,mBAgBEX,oBAQE,OARF,EAQE;MAPAa,IAAI,EAAC,OAOL;MANCC,EAAE,aAAaL,KAMhB;MALCM,IAAI,EAAEZ,wBAAmBM,KAK1B;MAJCO,KAAK,EAAEP,KAIR;iEAHSN,wBAAmBQ,WAAQM,OAGpC;MAFCC,QAAQ,EAAEf,wBAAmBQ,QAE9B;MADCQ,OAAK,yCAAEhB,yCAAF;IACN,CARF;;IAAA,+BAKWA,wBAAmBQ,aAI9BX,oBAAuB,MAAvB,EAAuB,IAAvB,EAAuBI,iBAAfI,MAAe,CAAvB,EAAc;IAAA;IAAd,EAzBF;;IAAA;GA0BQ,CA1BR;;EAAA,CA2BI,EA5BN,CAyCQ,EAZRR,oBAWS,QAXT,EAWS;IAVNoB,OAAK,yCAAEjB,+CAAF,CAUC;IATNe,QAAQ,GAAGf,wBAAmBQ;EASxB,CAXT,mBAIIR,wBAAmBM,KAAnB,IAA4BN,eAAUkB,MAAV,GAAgB,CAA5C,cAAsFlB,wBAAmBQ,QAAnB,IAA2B,IAA3B,2CAKtF,KATJ,EAWA;EAAA;EAXA,EAWAW,WAXA,CAYQ,CA/CV,oBAgDArB,oBAGU,SAHV,EAGUsB,WAHV,EAGU,CAFRC,WAEQ,EADRxB,oBAAmD,GAAnD,EAAmD,IAAnD,EAAG,mBAAcI,iBAAED,UAAF,CAAd,GAAuB,GAAvB,GAAwBC,iBAAED,eAAUkB,MAAZ,CAA3B,EAA6C;EAAA;EAA7C,CACQ,CAHV,EAIK,CAtDP","names":["class","_createElementVNode","_createElementBlock","_hoisted_2","_ctx","_toDisplayString","question","_Fragment","_renderList","option","index","for","selected","answer","type","id","name","value","$event","disabled","onChage","onClick","lenght","_hoisted_10","_hoisted_11","_hoisted_12"],"sourceRoot":"","sources":["/home/jardeleko/Documents/app-test/src/App.vue"],"sourcesContent":["<script>\nimport { ref, computed } from 'vue'\n\nexport default {\n  setup(){\n    const questions = ref([\n      {\n        question: 'What is Vue?',\n        aswer:0,\n        options: [\n          'App view framework/library',\n          'A library',\n          'A type of hat'\n        ]\n      },\n      {\n        question: 'What is Vuex?',\n        aswer:2,\n        options: [\n          'Eating a delicious snack',\n          'A ice cream maker',\n          'State management'\n        ]\n      },\n      {\n        question: 'What is Vue Router?',\n        aswer:1,\n        options: [\n          'Burger sauce',\n          'A routing library for Vue',\n          'A backend framework'\n        ]\n      }\n    ])\n    const quizCompleted = ref(false)\n    const currentQuestion = ref(0)\n    const score = computed(() => {\n      let value = 0\n      questions.value.map((q) => {\n        if(q.selected != null && q.answer == q.selected){\n          console.log('correct');\n          value++\n        }\n      })\n      return value\n    })\n    const getCurrentQuestion = computed(() => {\n      let question = questions.value[currentQuestion.value]\n      question.index = currentQuestion.value\n      return question\n    })\n    const SetAnswer = (e) => {\n      questions.value[currentQuestion.value].selected = e.target.value\n      e.target.value = null\n    }\n    const NextQuestion = () => {\n      if(currentQuestion.value < questions.value.lenght-1){\n        currentQuestion.value++\n        return\n      }\n      quizCompleted.value = true\n    }\n    \n  }\n}\n</script>\n\n<template>\n  <main class=\"app\">\n    <h1>Quizz</h1> \n    <section class=\"quiz\" v-if=\"!quizCompleted\">\n      \n      <div class=\"quiz-info\">\n        <span class=\"question\">{{getCurrentQuestion.question}}</span>\n        <span class=\"score\">{{score}}</span>\n      </div>\n      <div class=\"options\">\n        <label \n          v-for=\"(option, index) in getCurrentQuestion.option\"\n          :for=\"'option' + index\"\n          :class=\"`option ${\n              getCurrentQuestion.selected == index\n              ? index == getCurrentQuestion.answer\n                ? 'correct'\n                : 'wrong'\n              : ''\n          } ${\n            getCurrentQuestion.selected != null &&\n            index != getCurrentQuestion.selected \n              ? 'disabled'\n              : ''\n          }`\"\n        >\n          <input\n            type=\"radio\"\n            :id=\"'option' + index\"\n            :name=\"getCurrentQuestion.index\"\n            :value=\"index\"\n            v-model=\"getCurrentQuestion.selected\"\n            :disabled=\"getCurrentQuestion.selected\"\n            @chage=\"setAnswer\"\n          />\n          <span>{{option}}</span>\n        </label>        \n      </div>\n      <button\n        @click=\"NextQuestion\"\n        :disabled=\"!getCurrentQuestion.selected\">\n        {{\n          getCurrentQuestion.index == questions.lenght -1 \n            ? 'Finish'\n            : getCurrentQuestion.selected == null\n               ? 'Select an option'\n               : 'Next question'\n        }}\n      >\n      </button>\n    </section> \n    <section v-else>  \n      <h2>You have finished the quiz!</h2>\n      <p>Your score is {{score}}/{{questions.lenght}}</p>\n    </section>\n  </main>\n</template>\n\n<style>\n* {\n\tmargin: 0;\n\tpadding: 0;\n\tbox-sizing: border-box;\n\tfont-family: 'Montserrat', sans-serif;\n  }\n  body {\n    background-color: #271c36;\n    color: #FFF;\n  }\n  .app {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 2rem;\n    height: 100vh;\n  }\n  h1 {\n    font-size: 2rem;\n    margin-bottom: 2rem;\n  }\n  .quiz {\n    background-color: #382a4b;\n    padding: 1rem;\n    width: 100%;\n    max-width: 640px;\n  }\n  .quiz-info {\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 1rem;\n  }\n  .quiz-info .question {\n    color: #8F8F8F;\n    font-size: 1.25rem;\n  }\n  .quiz-info.score {\n    color: #FFF;\n    font-size: 1.25rem;\n  }\n  .options {\n    margin-bottom: 1rem;\n  }\n  .option {\n    padding: 1rem;\n    display: block;\n    background-color: #271c36;\n    margin-bottom: 0.5rem;\n    border-radius: 0.5rem;\n    cursor: pointer;\n  }\n  .option:hover {\n    background-color: #2d213f;\n  }\n  .option.correct {\n    background-color: #2cce7d;\n  }\n  .option.wrong {\n    background-color: #ff5a5f;\n  }\n  .option:last-of-type {\n    margin-bottom: 0;\n  }\n  .option.disabled {\n    opacity: 0.5;\n  }\n  .option input {\n    display: none;\n  }\n  button {\n    appearance: none;\n    outline: none;\n    border: none;\n    cursor: pointer;\n    padding: 0.5rem 1rem;\n    background-color: #2cce7d;\n    color: #2d213f;\n    font-weight: 700;\n    text-transform: uppercase;\n    font-size: 1.2rem;\n    border-radius: 0.5rem;\n  }\n  button:disabled {\n    opacity: 0.5;\n  }\n  h2 {\n    font-size: 2rem;\n    margin-bottom: 2rem;\n    text-align: center;\n  }\n  p {\n    color: #8F8F8F;\n    font-size: 1.5rem;\n    text-align: center;\n  }\n</style>\n"]},"metadata":{},"sourceType":"module"}