{"ast":null,"code":"import { ref, computed } from 'vue';\nexport default {\n  __name: 'App',\n\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const questions = ref([{\n      question: 'What is Vue?',\n      answer: 0,\n      options: ['App view framework/library', 'A library', 'A type of hat']\n    }, {\n      question: 'What is Vuex?',\n      answer: 2,\n      options: ['Eating a delicious snack', 'A ice cream maker', 'State management']\n    }, {\n      question: 'What is Vue Router?',\n      answer: 1,\n      options: ['Burger sauce', 'A routing library for Vue', 'A backend framework']\n    }]);\n    const quizCompleted = ref(false);\n    const currentQuestion = ref(0);\n    const score = computed(() => {\n      let value = 0;\n      questions.value.map(q => {\n        if (q.selected != null && q.answer == q.selected) {\n          console.log('correct');\n          value++;\n        }\n      });\n      return value;\n    });\n    const getCurrentQuestion = computed(() => {\n      let question = questions.value[currentQuestion.value];\n      question.index = currentQuestion.value;\n      return question;\n    });\n\n    const SetAnswer = e => {\n      questions.value[currentQuestion.value].selected = e.target.value;\n      e.target.value = null;\n    };\n\n    const NextQuestion = () => {\n      if (currentQuestion.value < questions.value.lenght - 1) {\n        currentQuestion.value++;\n        return;\n      }\n\n      quizCompleted.value = true;\n    };\n\n    const __returned__ = {\n      questions,\n      quizCompleted,\n      currentQuestion,\n      score,\n      getCurrentQuestion,\n      SetAnswer,\n      NextQuestion,\n      ref,\n      computed\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"AACA,SAASA,GAAT,EAAcC,QAAd,QAA8B,KAA9B;;;;;;;;IACE,MAAMC,SAAS,GAAGF,GAAG,CAAC,CACpB;MACEG,QAAQ,EAAE,cADZ;MAEEC,MAAM,EAAC,CAFT;MAGEC,OAAO,EAAE,CACP,4BADO,EAEP,WAFO,EAGP,eAHO;IAHX,CADoB,EAUpB;MACEF,QAAQ,EAAE,eADZ;MAEEC,MAAM,EAAC,CAFT;MAGEC,OAAO,EAAE,CACP,0BADO,EAEP,mBAFO,EAGP,kBAHO;IAHX,CAVoB,EAmBpB;MACEF,QAAQ,EAAE,qBADZ;MAEEC,MAAM,EAAC,CAFT;MAGEC,OAAO,EAAE,CACP,cADO,EAEP,2BAFO,EAGP,qBAHO;IAHX,CAnBoB,CAAD,CAArB;IA6BA,MAAMC,aAAa,GAAGN,GAAG,CAAC,KAAD,CAAzB;IACA,MAAMO,eAAe,GAAGP,GAAG,CAAC,CAAD,CAA3B;IACA,MAAMQ,KAAK,GAAGP,QAAQ,CAAC,MAAM;MAC3B,IAAIQ,KAAK,GAAG,CAAZ;MACAP,SAAS,CAACO,KAAV,CAAgBC,GAAhB,CAAqBC,CAAD,IAAO;QACzB,IAAGA,CAAC,CAACC,QAAF,IAAc,IAAd,IAAsBD,CAAC,CAACP,MAAF,IAAYO,CAAC,CAACC,QAAvC,EAAgD;UAC9CC,OAAO,CAACC,GAAR,CAAY,SAAZ;UACAL,KAAK;QACN;MACF,CALD;MAMA,OAAOA,KAAP;IACD,CATqB,CAAtB;IAUA,MAAMM,kBAAkB,GAAGd,QAAQ,CAAC,MAAM;MACxC,IAAIE,QAAQ,GAAGD,SAAS,CAACO,KAAV,CAAgBF,eAAe,CAACE,KAAhC,CAAf;MACAN,QAAQ,CAACa,KAAT,GAAiBT,eAAe,CAACE,KAAjC;MACA,OAAON,QAAP;IACD,CAJkC,CAAnC;;IAKA,MAAMc,SAAS,GAAIC,CAAD,IAAO;MACvBhB,SAAS,CAACO,KAAV,CAAgBF,eAAe,CAACE,KAAhC,EAAuCG,QAAvC,GAAkDM,CAAC,CAACC,MAAF,CAASV,KAA3D;MACAS,CAAC,CAACC,MAAF,CAASV,KAAT,GAAiB,IAAjB;IACD,CAHD;;IAIA,MAAMW,YAAY,GAAG,MAAM;MACzB,IAAGb,eAAe,CAACE,KAAhB,GAAwBP,SAAS,CAACO,KAAV,CAAgBY,MAAhB,GAAuB,CAAlD,EAAoD;QAClDd,eAAe,CAACE,KAAhB;QACA;MACD;;MACDH,aAAa,CAACG,KAAd,GAAsB,IAAtB;IACD,CAND","names":["ref","computed","questions","question","answer","options","quizCompleted","currentQuestion","score","value","map","q","selected","console","log","getCurrentQuestion","index","SetAnswer","e","target","NextQuestion","lenght"],"sources":["/home/jardeleko/Documents/app-test/src/App.vue"],"sourcesContent":["<script setup>\nimport { ref, computed } from 'vue'  \n  const questions = ref([\n    {\n      question: 'What is Vue?',\n      answer:0,\n      options: [\n        'App view framework/library',\n        'A library',\n        'A type of hat'\n      ]\n    },\n    {\n      question: 'What is Vuex?',\n      answer:2,\n      options: [\n        'Eating a delicious snack',\n        'A ice cream maker',\n        'State management'\n      ]\n    },\n    {\n      question: 'What is Vue Router?',\n      answer:1,\n      options: [\n        'Burger sauce',\n        'A routing library for Vue',\n        'A backend framework'\n      ]\n    }\n  ])\n  const quizCompleted = ref(false)\n  const currentQuestion = ref(0)\n  const score = computed(() => {\n    let value = 0\n    questions.value.map((q) => {\n      if(q.selected != null && q.answer == q.selected){\n        console.log('correct');\n        value++\n      }\n    })\n    return value\n  })\n  const getCurrentQuestion = computed(() => {\n    let question = questions.value[currentQuestion.value]\n    question.index = currentQuestion.value\n    return question\n  })\n  const SetAnswer = (e) => {\n    questions.value[currentQuestion.value].selected = e.target.value\n    e.target.value = null\n  }\n  const NextQuestion = () => {\n    if(currentQuestion.value < questions.value.lenght-1){\n      currentQuestion.value++\n      return\n    }\n    quizCompleted.value = true\n  }\n  \n</script>\n\n<template>\n  <main class=\"app\">\n    <h1>Quizz</h1> \n    <section class=\"quiz\" v-if=\"!quizCompleted\">\n      \n      <div class=\"quiz-info\">\n        <span class=\"question\">{{getCurrentQuestion.question}}</span>\n        <span class=\"score\">{{score}}</span>\n      </div>\n      <div class=\"options\">\n        <label \n          v-for=\"(option, index) in getCurrentQuestion.options\"\n          :for=\"'option' + index\"\n          v-bind:key = \"option.index\"\n          :class=\"`option ${\n              getCurrentQuestion.selected == index\n              ? index == getCurrentQuestion.answer\n                ? 'correct'\n                : 'wrong'\n              : ''\n          } ${\n            getCurrentQuestion.selected != null &&\n            index != getCurrentQuestion.selected \n              ? 'disabled'\n              : ''\n          }`\"\n        >\n          <input\n            type=\"radio\"\n            :id=\"'option' + index\"\n            :name=\"getCurrentQuestion.index\"\n            :value=\"index\"\n            v-model=\"getCurrentQuestion.selected\"\n            :disabled=\"getCurrentQuestion.selected\"\n            @chage=\"SetAnswer\"\n          />\n          <span>{{option}}</span>\n        </label>        \n      </div>\n      <button\n        @click=\"NextQuestion\"\n        :disabled=\"!getCurrentQuestion.selected\">\n        {{\n          getCurrentQuestion.index == questions.lenght -1 \n            ? 'Finish'\n            : getCurrentQuestion.selected == null\n               ? 'Select an option'\n               : 'Next question'\n        }}\n      >\n      </button>\n    </section> \n    <section v-else>  \n      <h2>You have finished the quiz!</h2>\n      <p>Your score is {{score}}/{{questions.lenght}}</p>\n    </section>\n  </main>\n</template>\n\n<style>\n* {\n\tmargin: 0;\n\tpadding: 0;\n\tbox-sizing: border-box;\n\tfont-family: 'Montserrat', sans-serif;\n  }\n  body {\n    background-color: #9477bd;\n    color: #FFF;\n  }\n  .app {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 2rem;\n    height: 100vh;\n  }\n  h1 {\n    font-size: 2rem;\n    margin-bottom: 2rem;\n  }\n  .quiz {\n    background-color: #042846;\n    padding: 1rem;\n    width: 100%;\n    max-width: 640px;\n  }\n  .quiz-info {\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 1rem;\n  }\n  .quiz-info .question {\n    color: #ffffff;\n    font-size: 1.25rem;\n  }\n  .quiz-info.score {\n    color: #FFF;\n    font-size: 1.25rem;\n  }\n  .options {\n    margin-bottom: 1rem;\n  }\n  .option {\n    padding: 1rem;\n    display: block;\n    background-color: #090c22;\n    margin-bottom: 0.5rem;\n    border-radius: 0.5rem;\n    cursor: pointer;\n  }\n  .option:hover {\n    background-color: #2d213f;\n  }\n  .option.correct {\n    background-color: #2cce7d;\n  }\n  .option.wrong {\n    background-color: #ff5a5f;\n  }\n  .option:last-of-type {\n    margin-bottom: 0;\n  }\n  .option.disabled {\n    opacity: 0.5;\n  }\n  .option input {\n    display: none;\n  }\n  button {\n    appearance: none;\n    outline: none;\n    border: none;\n    cursor: pointer;\n    padding: 0.5rem 1rem;\n    background-color: #2cce7d;\n    color: #2d213f;\n    font-weight: 700;\n    text-transform: uppercase;\n    font-size: 1.2rem;\n    border-radius: 0.5rem;\n  }\n  button:disabled {\n    opacity: 0.5;\n  }\n  h2 {\n    font-size: 2rem;\n    margin-bottom: 2rem;\n    text-align: center;\n  }\n  p {\n    color: #8F8F8F;\n    font-size: 1.5rem;\n    text-align: center;\n  }\n</style>\n"]},"metadata":{},"sourceType":"module"}