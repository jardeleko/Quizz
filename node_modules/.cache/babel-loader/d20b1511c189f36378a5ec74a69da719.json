{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelRadio as _vModelRadio, withDirectives as _withDirectives, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"app\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Quizz\", -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = {\n  key: 0,\n  class: \"quiz\"\n};\nconst _hoisted_4 = {\n  class: \"quiz-info\"\n};\nconst _hoisted_5 = {\n  class: \"question\"\n};\nconst _hoisted_6 = {\n  class: \"score\"\n};\nconst _hoisted_7 = {\n  class: \"options\"\n};\nconst _hoisted_8 = [\"for\"];\nconst _hoisted_9 = [\"id\", \"name\", \"value\", \"disabled\"];\nconst _hoisted_10 = [\"disabled\"];\nconst _hoisted_11 = {\n  key: 1\n};\n\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"You have finished the quiz!\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"main\", _hoisted_1, [_hoisted_2, !$setup.quizCompleted ? (_openBlock(), _createElementBlock(\"section\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"span\", _hoisted_5, _toDisplayString($setup.getCurrentQuestion.question), 1\n  /* TEXT */\n  ), _createElementVNode(\"span\", _hoisted_6, \"Score \" + _toDisplayString($setup.score) + \"/\" + _toDisplayString($setup.questions.length), 1\n  /* TEXT */\n  )]), _createElementVNode(\"div\", _hoisted_7, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.getCurrentQuestion.options, (option, index) => {\n    return _openBlock(), _createElementBlock(\"label\", {\n      for: 'option' + index,\n      key: option.index,\n      class: _normalizeClass(`option ${$setup.getCurrentQuestion.selected == index ? index == $setup.getCurrentQuestion.answer ? 'correct' : 'wrong' : ''} ${$setup.getCurrentQuestion.selected != null && index != $setup.getCurrentQuestion.selected ? 'disabled' : ''}`)\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"radio\",\n      id: 'option' + index,\n      name: $setup.getCurrentQuestion.index,\n      value: index,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.getCurrentQuestion.selected = $event),\n      disabled: $setup.getCurrentQuestion.selected,\n      onChage: $setup.SetAnswer\n    }, null, 40\n    /* PROPS, HYDRATE_EVENTS */\n    , _hoisted_9), [[_vModelRadio, $setup.getCurrentQuestion.selected]]), _createElementVNode(\"span\", null, _toDisplayString(option), 1\n    /* TEXT */\n    )], 10\n    /* CLASS, PROPS */\n    , _hoisted_8);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]), _createElementVNode(\"button\", {\n    onClick: $setup.NextQuestion,\n    disabled: !$setup.getCurrentQuestion.selected\n  }, _toDisplayString($setup.getCurrentQuestion.index == $setup.questions.length - 1 ? 'Finish' : $setup.getCurrentQuestion.selected == null ? 'Select an option' : 'Next question'), 9\n  /* TEXT, PROPS */\n  , _hoisted_10)])) : (_openBlock(), _createElementBlock(\"section\", _hoisted_11, [_hoisted_12, _createElementVNode(\"p\", null, \"Your score is \" + _toDisplayString($setup.score) + \"/\" + _toDisplayString($setup.questions.length), 1\n  /* TEXT */\n  )]))]);\n}","map":{"version":3,"mappings":";;EAmEQA,KAAK,EAAC;;;gCACVC,oBAAc,IAAd,EAAc,IAAd,EAAI,OAAJ,EAAS;AAAA;AAAT;;;;EAESD,KAAK,EAAC;;;EACRA,KAAK,EAAC;;;EACHA,KAAK,EAAC;;;EACNA,KAAK,EAAC;;;EAGTA,KAAK,EAAC;;;;;;;;;iCA4CXC,oBAAoC,IAApC,EAAoC,IAApC,EAAI,6BAAJ,EAA+B;AAAA;AAA/B;;;uBArDJC,oBAwDO,MAxDP,cAwDO,CAvDLC,UAuDK,GArDwBC,sCAA7BF,oBAgDU,SAhDV,cAgDU,CA/CRD,oBAGM,KAHN,cAGM,CAFJA,oBAA6D,MAA7D,cAA6DI,iBAApCD,0BAAmBE,QAAiB,CAA7D,EAAoD;EAAA;EAApD,CAEI,EADJL,oBAA+D,MAA/D,cAAoB,WAAMI,iBAAED,YAAF,CAAN,GAAe,GAAf,GAAgBC,iBAAED,iBAAUG,MAAZ,CAApC,EAAsD;EAAA;EAAtD,CACI,CAHN,CA+CQ,EA1CRN,oBA6BM,KA7BN,cA6BM,oBA5BJC,oBA2BQM,SA3BR,EA2BQ,IA3BR,EA2BQC,YA1BoBL,0BAAmBM,OA0BvC,EA1B8C,CAA5CC,MAA4C,EAApCC,KAAoC,KAA/B;yBADvBV,oBA2BQ,OA3BR,EA2BQ;MAzBLW,GAAG,aAAaD,KAyBX;MAxBCE,GAAG,EAAIH,MAAM,CAACC,KAwBf;MAvBLZ,KAAK,4BAA2BI,0BAAmBW,QAAnB,IAA+BH,KAA/B,GAAuDA,KAAK,IAAIR,0BAAmBY,MAA5B,sBAAvD,SAAoMZ,0BAAmBW,QAAnB,IAA2B,IAA3B,IAAoDH,KAAK,IAAIR,0BAAmBW,QAAhF,oBAA/N;IAuBA,CA3BR,mBAiBEd,oBAOsB,OAPtB,EAOsB;MANpBgB,IAAI,EAAC,OAMe;MALnBC,EAAE,aAAaN,KAKI;MAJnBO,IAAI,EAAEf,0BAAmBQ,KAIN;MAHnBQ,KAAK,EAAER,KAGY;iEAFXR,0BAAmBW,WAAQM,OAEhB;MADnBC,QAAQ,EAAElB,0BAAmBW,QACV;MAAnBQ,OAAK,EAAEnB;IAAY,CAPtB;;IAAA,+BAKWA,0BAAmBW,aAI9Bd,oBAAuB,MAAvB,EAAuB,IAAvB,EAAuBI,iBAAfM,MAAe,CAAvB,EAAc;IAAA;IAAd,EA1BF;;IAAA;GA2BQ,CA3BR;;EAAA,CA4BI,EA7BN,CA0CQ,EAZRV,oBAWS,QAXT,EAWS;IAVNuB,OAAK,EAAEpB,mBAUD;IATNkB,QAAQ,GAAGlB,0BAAmBW;EASxB,CAXT,mBAIIX,0BAAmBQ,KAAnB,IAA4BR,iBAAUG,MAAV,GAAgB,CAA5C,cAAsFH,0BAAmBW,QAAnB,IAA2B,IAA3B,wCAJ1F;;EAAA,cAYQ,CAhDV,oBAiDAb,oBAGU,SAHV,EAGUuB,WAHV,EAGU,CAFRC,WAEQ,EADRzB,oBAAmD,GAAnD,EAAmD,IAAnD,EAAG,mBAAcI,iBAAED,YAAF,CAAd,GAAuB,GAAvB,GAAwBC,iBAAED,iBAAUG,MAAZ,CAA3B,EAA6C;EAAA;EAA7C,CACQ,CAHV,EAIK,CAxDP","names":["class","_createElementVNode","_createElementBlock","_hoisted_2","$setup","_toDisplayString","question","length","_Fragment","_renderList","options","option","index","for","key","selected","answer","type","id","name","value","$event","disabled","onChage","onClick","_hoisted_11","_hoisted_12"],"sourceRoot":"","sources":["/home/jardeleko/Documents/app-test/src/App.vue"],"sourcesContent":["<script setup>\nimport { ref, computed } from 'vue'  \n  const questions = ref([\n    {\n      question: 'What is Vue?',\n      answer:0,\n      options: [\n        'App view framework/library',\n        'A library',\n        'A type of hat'\n      ],\n      selected: null\n    },\n    {\n      question: 'What is Vuex?',\n      answer:2,\n      options: [\n        'Eating a delicious snack',\n        'A ice cream maker',\n        'State management'\n      ],\n      selected: null\n    },\n    {\n      question: 'What is Vue Router?',\n      answer:1,\n      options: [\n        'Burger sauce',\n        'A routing library for Vue',\n        'A backend framework'\n      ],\n      selected: null\n    }\n  ])\n  const quizCompleted = ref(false)\n  const currentQuestion = ref(0)\n\n  const score = computed(() => {\n    let value = 0\n    questions.value.map((q) => {\n      if(q.selected != null && q.answer == q.selected){\n        console.log('correct');\n        value++\n      }\n    })\n    return value\n  })\n  const getCurrentQuestion = computed(() => {\n    let question = questions.value[currentQuestion.value]\n    question.index = currentQuestion.value\n    return question\n  })\n  const SetAnswer = (e) => {\n    questions.value[currentQuestion.value].selected = e.target.value\n    e.target.value = null\n  }\n  const NextQuestion = () => {\n    if(currentQuestion.value < questions.value.length -1){\n      currentQuestion.value++\n      return\n    }\n    quizCompleted.value = true\n  } \n  \n</script>\n\n<template>\n  <main class=\"app\">\n    <h1>Quizz</h1> \n\n    <section class=\"quiz\" v-if=\"!quizCompleted\">\n      <div class=\"quiz-info\">\n        <span class=\"question\">{{getCurrentQuestion.question}}</span>\n        <span class=\"score\">Score {{score}}/{{questions.length}}</span>\n      </div>\n\n      <div class=\"options\">\n        <label \n          v-for=\"(option, index) in getCurrentQuestion.options\"\n          :for=\"'option' + index\"\n          v-bind:key = \"option.index\"\n          :class=\"`option ${\n              getCurrentQuestion.selected == index\n                ? index == getCurrentQuestion.answer\n                  ? 'correct'\n                  : 'wrong'\n                : ''\n          } ${\n            getCurrentQuestion.selected != null && \n            index != getCurrentQuestion.selected \n              ? 'disabled' \n              : ''\n          }`\">\n\n          <input\n            type=\"radio\"\n            :id=\"'option' + index\"\n            :name=\"getCurrentQuestion.index\"\n            :value=\"index\"\n            v-model=\"getCurrentQuestion.selected\"\n            :disabled=\"getCurrentQuestion.selected\"\n            @chage=\"SetAnswer\"/>\n\n          <span>{{option}}</span>\n        </label>        \n      </div>\n      <button\n        @click=\"NextQuestion\"\n        :disabled=\"!getCurrentQuestion.selected\">\n        {{\n          getCurrentQuestion.index == questions.length -1 \n            ? 'Finish'\n            : getCurrentQuestion.selected == null\n               ? 'Select an option'\n               : 'Next question'\n        }}\n      \n      </button>\n    </section> \n    <section v-else>  \n      <h2>You have finished the quiz!</h2>\n      <p>Your score is {{score}}/{{questions.length}}</p>\n    </section>\n  </main>\n</template>\n\n<style>\n* {\n\tmargin: 0;\n\tpadding: 0;\n\tbox-sizing: border-box;\n\tfont-family: 'Montserrat', sans-serif;\n  }\n  body {\n    background-color: #15055a;\n    color: #FFF;\n  }\n  .app {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 2rem;\n    height: 100vh;\n  }\n  h1 {\n    font-size: 2rem;\n    margin-bottom: 2rem;\n  }\n  .quiz {\n    background-color: #042846;\n    padding: 1rem;\n    width: 100%;\n    max-width: 640px;\n  }\n  .quiz-info {\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 1rem;\n  }\n  .quiz-info .question {\n    color: #ffffff;\n    font-size: 1.25rem;\n  }\n  .quiz-info.score {\n    color: #FFF;\n    font-size: 1.25rem;\n  }\n  .options {\n    margin-bottom: 1rem;\n  }\n  .option {\n    padding: 1rem;\n    display: block;\n    background-color: #6b32bb;\n    margin-bottom: 0.5rem;\n    border-radius: 0.5rem;\n    cursor: pointer;\n  }\n  .option:hover {\n    background-color: #2d213f;\n  }\n  .option.correct {\n    background-color: #2cce7d;\n  }\n  .option.wrong {\n    background-color: #ff5a5f;\n  }\n  .option:last-of-type {\n    margin-bottom: 0;\n  }\n  .option.disabled {\n    opacity: 0.5;\n  }\n  .option input {\n    display: none;\n  }\n  button {\n    appearance: none;\n    outline: none;\n    border: none;\n    cursor: pointer;\n    padding: 0.5rem 1rem;\n    background-color: #2cce7d;\n    color: #2d213f;\n    font-weight: 700;\n    text-transform: uppercase;\n    font-size: 1.2rem;\n    border-radius: 0.5rem;\n  }\n  button:disabled {\n    opacity: 0.5;\n  }\n  h2 {\n    font-size: 2rem;\n    margin-bottom: 2rem;\n    text-align: center;\n  }\n  p {\n    color: #8F8F8F;\n    font-size: 1.5rem;\n    text-align: center;\n  }\n</style>\n"]},"metadata":{},"sourceType":"module"}